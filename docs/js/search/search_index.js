var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,2.447]],["body/coverage.html",[0,1.385,1,0.541,2,1.836,3,1.088,4,1.836,5,1.836,6,1.385,7,1.976,8,2.539,9,1.088,10,4.284,11,0.088,12,4.284,13,1.385,14,1.088,15,2.513,16,1.385,17,1.088,18,1.976,19,1.088,20,1.385,21,1.088,22,1.385,23,1.088,24,1.976,25,1.385,26,1.088,27,1.385,28,1.088,29,2.513,30,1.385,31,1.088,32,1.385,33,2.513,34,1.088,35,1.385,36,1.088,37,1.088,38,1.976,39,1.976,40,1.088,41,1.385,42,1.088,43,1.385,44,1.976,45,1.088,46,1.385,47,1.385,48,1.385,49,1.385,50,1.088,51,1.976,52,1.385,53,1.976,54,1.088,55,1.385,56,1.088,57,1.385,58,1.385,59,1.088,60,1.088,61,1.385,62,1.385,63,1.385,64,0.866,65,1.385,66,1.836,67,1.836,68,0.038,69,0.054,70,0.038]],["title/dependencies.html",[71,2.198,72,2.24]],["body/dependencies.html",[11,0.083,68,0.068,69,0.079,70,0.068,72,2.522,73,0.215,74,3.344]],["title/miscellaneous/functions.html",[75,1.037,76,2.24]],["body/miscellaneous/functions.html",[3,0.818,6,0.613,7,1.6,9,1.066,11,0.085,13,0.613,14,1.257,15,1.6,16,1.042,17,1.066,18,1.6,19,1.066,20,1.042,21,1.066,22,1.357,23,1.066,24,1.042,25,1.042,26,1.066,27,1.042,28,0.818,29,1.6,30,1.042,31,0.818,32,1.792,33,2.186,34,0.818,35,1.042,36,0.818,37,0.818,38,1.042,39,1.6,40,0.818,41,1.357,42,0.818,43,0.613,44,1.6,45,0.818,46,0.613,47,1.6,48,1.042,49,0.613,50,0.818,51,1.042,52,1.357,53,1.6,54,0.818,55,1.357,56,0.818,57,0.613,58,1.042,59,0.482,60,0.818,61,1.042,62,0.613,63,1.042,64,0.849,68,0.037,69,0.028,70,0.017,75,0.384,76,0.613,77,1.066,78,1.381,79,0.613,80,0.813,81,0.813,82,0.813,83,0.813,84,2.121,85,0.813,86,1.381,87,0.813,88,2.583,89,0.813,90,0.813,91,1.218,92,1.266,93,1.131,94,1.208,95,1.899,96,3.22,97,2.121,98,2.121,99,2.279,100,2.637,101,3.496,102,3.679,103,2.899,104,0.818,105,3.022,106,0.813,107,3.22,108,0.813,109,1.357,110,0.969,111,0.813,112,1.357,113,0.813,114,0.813,115,1.381,116,1.042,117,0.813,118,1.381,119,0.813,120,0.613,121,1.121,122,0.813,123,0.813,124,2.754,125,0.675,126,1.381,127,2.121,128,2.583,129,0.813,130,1.381,131,1.381,132,0.675,133,0.813,134,1.6,135,0.813,136,1.381,137,0.813,138,0.813,139,0.813,140,1.8,141,0.482,142,0.818,143,0.613,144,1.381,145,1.8,146,0.813,147,0.813,148,0.482,149,0.813,150,1.042,151,1.381,152,0.813,153,0.305,154,1.042,155,1.042,156,0.813,157,1.591,158,0.813,159,1.381,160,1.8,161,0.813,162,1.381,163,1.381,164,0.813,165,0.813,166,1.042,167,0.613,168,0.813,169,0.813,170,1.381,171,0.613,172,1.381,173,0.813,174,1.8,175,0.813,176,0.813,177,1.381,178,0.813,179,0.482,180,0.813,181,0.813,182,0.813,183,0.813,184,1.381,185,0.813,186,0.813,187,0.813,188,0.813,189,1.381,190,0.813,191,1.381,192,2.754,193,0.813,194,1.042,195,1.381,196,1.381,197,1.381,198,1.381,199,0.813,200,2.121,201,1.042,202,1.381,203,1.8,204,0.813,205,0.813,206,1.381,207,0.813,208,0.813,209,0.813,210,0.813,211,0.613,212,0.813,213,0.482,214,0.813,215,0.813,216,0.813,217,0.813,218,0.613,219,0.813,220,1.066,221,0.813,222,0.813,223,0.813,224,0.813,225,0.813,226,0.813,227,0.813,228,0.813,229,0.813]],["title/index.html",[77,1.302,230,2.198,231,2.198]],["body/index.html",[1,1.039,11,0.059,64,0.984,68,0.059,69,0.059,70,0.059,73,0.245,91,0.984,92,1.322,93,1.125,94,0.783,95,0.984,125,1.467,148,1.236,150,1.574,157,1.8,179,1.236,194,2.162,201,2.162,211,1.574,213,1.236,218,2.162,232,0.783,233,2.086,234,3.273,235,2.189,236,2.086,237,2.086,238,1.432,239,2.086,240,2.086,241,2.086,242,2.086,243,2.086,244,2.086,245,2.189,246,1.94,247,2.086,248,2.086,249,2.086,250,1.236,251,2.086,252,2.086,253,2.086,254,2.086,255,2.086,256,2.086,257,1.075,258,2.086,259,0.984,260,0.783,261,1.574,262,2.086,263,0.783,264,1.322,265,1.698,266,3.524,267,1.322,268,2.162,269,2.866,270,2.866,271,2.086,272,2.086,273,2.086,274,0.783,275,1.574]],["title/modules.html",[276,2.447]],["body/modules.html",[11,0.08,68,0.069,69,0.08,70,0.069,276,2.561]],["title/overview.html",[277,2.447]],["body/overview.html",[11,0.08,68,0.069,69,0.08,70,0.069,277,2.561]],["title/miscellaneous/typealiases.html",[75,1.037,278,2.969]],["body/miscellaneous/typealiases.html",[3,1.68,8,1.68,11,0.081,59,1.68,60,2.074,68,0.058,69,0.072,70,0.058,75,1.337,77,1.68,79,2.139,91,1.337,92,1.064,93,1.12,94,1.313,95,1.337,99,2.139,109,2.641,121,1.337,166,2.139,167,2.139,171,2.865,220,1.68,279,2.835,280,3.501,281,3.501,282,2.835,283,2.835,284,1.68,285,2.835,286,2.835,287,2.835,288,2.835]],["title/additional-documentation/rxjs-boolean-documentation.html",[1,0.518,73,0.113,125,0.659,274,0.659,289,0.829]],["body/additional-documentation/rxjs-boolean-documentation.html",[9,1.586,11,0.08,14,1.586,68,0.055,69,0.069,70,0.055,73,0.25,110,1.004,125,1.388,132,1.004,148,1.586,153,1.004,213,1.586,232,1.267,235,1.586,238,1.388,250,1.586,257,1.267,259,1.593,260,1.267,263,1.004,264,1.004,267,1.267,268,2.02,290,2.677,291,2.677,292,2.677,293,1.263,294,1.263,295,1.263,296,1.263,297,1.263,298,1.263,299,1.263,300,1.263,301,1.263,302,1.263,303,1.586,304,2.677,305,2.677,306,2.677,307,2.677,308,2.677,309,2.677]],["title/additional-documentation/rxjs-number-documentation.html",[1,0.518,73,0.113,157,0.829,274,0.659,289,0.829]],["body/additional-documentation/rxjs-number-documentation.html",[11,0.084,17,1.167,19,1.167,21,1.167,23,1.167,26,1.632,28,1.632,31,1.167,34,1.167,36,1.167,37,1.167,68,0.04,69,0.056,70,0.04,73,0.221,94,1.033,110,0.739,121,0.929,132,0.739,134,2.594,141,1.632,142,1.882,153,0.739,155,2.395,157,1.622,232,1.033,238,1.033,245,1.632,246,1.167,257,1.033,259,1.299,260,1.033,263,0.739,264,1.033,267,1.033,284,1.167,293,0.929,294,0.929,295,0.929,296,0.929,297,0.929,298,0.929,299,0.929,300,0.929,301,0.929,302,0.929,303,1.882,310,1.486,311,1.97,312,2.754,313,2.754,314,1.97,315,1.97,316,2.754,317,3.175,318,1.97,319,2.754,320,2.754,321,1.97,322,1.97,323,1.97,324,1.97,325,3.175,326,1.97,327,1.97,328,1.97,329,1.97,330,1.97,331,2.754,332,1.97,333,1.97,334,1.97,335,1.97,336,1.97,337,1.97,338,1.97,339,1.97,340,1.97,341,1.97,342,1.97,343,1.97,344,1.97,345,1.97,346,1.97,347,1.97,348,1.97,349,2.754,350,1.97,351,1.97,352,1.97,353,1.97,354,1.97,355,1.97,356,1.97,357,1.97,358,1.97,359,1.97,360,1.97,361,1.97,362,1.97]],["title/additional-documentation/rxjs-string-documentation.html",[1,0.518,73,0.113,93,0.518,274,0.659,289,0.829]],["body/additional-documentation/rxjs-string-documentation.html",[11,0.087,40,1.203,42,1.203,45,1.203,50,1.666,54,1.666,56,1.666,65,1.531,68,0.042,69,0.058,70,0.042,73,0.224,92,1.21,93,1.027,104,1.666,110,0.762,121,0.957,132,0.762,142,1.203,153,0.762,220,1.912,232,1.055,238,1.055,245,1.666,246,1.203,257,1.055,259,1.326,260,1.055,263,0.762,264,1.055,267,1.055,284,1.203,293,0.957,294,0.957,295,0.957,296,0.957,297,0.957,298,0.957,299,0.957,300,0.957,301,0.957,302,0.957,303,1.912,310,1.531,363,2.812,364,2.03,365,2.03,366,2.03,367,2.03,368,2.812,369,2.03,370,2.03,371,2.03,372,2.03,373,2.03,374,2.03,375,2.03,376,2.03,377,2.03,378,2.03,379,2.03,380,2.03,381,2.03,382,2.03,383,2.812,384,2.812,385,2.03,386,2.03,387,2.03,388,2.812,389,2.03,390,3.955,391,3.955,392,2.03,393,2.03,394,2.03,395,2.03,396,2.03,397,2.03,398,2.03,399,2.03]],["title/additional-documentation/rxjs-utility-documentation.html",[1,0.518,73,0.113,265,1.042,274,0.659,289,0.829]],["body/additional-documentation/rxjs-utility-documentation.html",[8,1.407,11,0.085,64,1.649,68,0.049,69,0.064,70,0.064,73,0.224,91,1.475,92,1.173,93,0.922,94,1.173,95,1.12,100,1.791,104,1.407,110,1.173,112,2.358,116,1.791,120,2.358,125,0.891,132,0.891,141,1.407,143,1.791,153,0.891,154,1.791,179,1.407,232,1.173,235,1.407,238,1.173,250,1.407,257,1.173,260,0.891,261,1.791,263,0.891,264,0.891,265,1.407,267,1.173,275,1.791,293,1.12,294,1.12,295,1.12,296,1.12,297,1.12,298,1.12,299,1.12,300,1.12,301,1.475,302,1.12,400,2.374,401,2.374,402,2.374,403,2.374,404,2.374,405,2.374,406,2.374,407,2.374,408,2.374,409,2.374,410,2.374,411,2.374,412,3.126,413,2.374,414,2.374,415,2.374,416,2.374,417,2.374]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["0",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["0.004",{"_index":355,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["0.004000",{"_index":358,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["1",{"_index":317,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["1,000,000.00",{"_index":352,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["1.00e+3",{"_index":343,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["1.2",{"_index":319,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["1.230e+5",{"_index":359,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["1.23e5]).pipe(toprecision(4)).subscribe",{"_index":356,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["1/1",{"_index":12,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":10,"title":{},"body":{"coverage.html":{}}}],["101",{"_index":378,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["12",{"_index":313,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["12.34",{"_index":336,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["123.5",{"_index":357,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["1234",{"_index":384,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["136",{"_index":314,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["1]]).pipe(isinteger()).subscribe",{"_index":333,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["2.00e+3",{"_index":344,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["2000",{"_index":341,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["255]).pipe(tostring(16)).subscribe",{"_index":361,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["3.00e+3",{"_index":345,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["3.14]).pipe(isinteger()).subscribe",{"_index":326,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["3000]).pipe(toexponential(2)).subscribe",{"_index":342,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["39;&#39",{"_index":135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;test&#39",{"_index":136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["45.34",{"_index":320,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["5)).subscribe",{"_index":383,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["53",{"_index":331,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["5e",{"_index":318,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["6.5.5",{"_index":74,"title":{},"body":{"dependencies.html":{}}}],["accepts",{"_index":202,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":274,"title":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}},"body":{"index.html":{}}}],["aliases",{"_index":279,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":251,"title":{},"body":{"index.html":{}}}],["allowing",{"_index":147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["allows",{"_index":402,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["api",{"_index":266,"title":{},"body":{"index.html":{}}}],["apis",{"_index":298,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["apply",{"_index":229,"title":{},"body":{"miscellaneous/functions.html":{}}}],["around",{"_index":268,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{}}}],["at.ts",{"_index":39,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["available",{"_index":284,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["avoid",{"_index":253,"title":{},"body":{"index.html":{}}}],["aware",{"_index":297,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["base",{"_index":212,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":150,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["before",{"_index":177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["behaviorsubject",{"_index":363,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["behaviour",{"_index":219,"title":{},"body":{"miscellaneous/functions.html":{}}}],["being",{"_index":159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolean",{"_index":125,"title":{"additional-documentation/rxjs-boolean-documentation.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["booleans",{"_index":273,"title":{},"body":{"index.html":{}}}],["built",{"_index":247,"title":{},"body":{"index.html":{}}}],["callback",{"_index":184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case.ts",{"_index":53,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["change",{"_index":299,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["changes",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["character",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["characters",{"_index":196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["charat",{"_index":40,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["charat(position",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["charcodeat",{"_index":42,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["charcodeat(position",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["check",{"_index":127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checks",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":365,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["code",{"_index":41,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["completes",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log(value",{"_index":141,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["const",{"_index":411,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["contains",{"_index":310,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["continue",{"_index":149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["continuing",{"_index":178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convenience",{"_index":250,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["conversion",{"_index":200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convert",{"_index":203,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converting",{"_index":195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converts",{"_index":208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["currency",{"_index":349,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["currently",{"_index":294,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["currenttext",{"_index":367,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["deboucewithquery",{"_index":275,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["debounce",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["debounces",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debouncewithquery",{"_index":61,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["debouncewithquery(1000",{"_index":415,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["debouncewithquery(time",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":72,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["developer",{"_index":403,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["developers",{"_index":252,"title":{},"body":{"index.html":{}}}],["development",{"_index":295,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["different",{"_index":211,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["documentation",{"_index":1,"title":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["e",{"_index":375,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["ecmascript",{"_index":246,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["emission",{"_index":405,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["end",{"_index":167,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ends",{"_index":47,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["endswith",{"_index":45,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["endswith(character",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etc",{"_index":243,"title":{},"body":{"index.html":{}}}],["eur",{"_index":350,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["event",{"_index":404,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["example",{"_index":132,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["executed",{"_index":185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exponential",{"_index":189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exponential.ts",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["export",{"_index":364,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["false",{"_index":134,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["features",{"_index":301,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["ff",{"_index":362,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["fill",{"_index":169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fillstring",{"_index":163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filtering",{"_index":290,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{}}}],["filtertruthy",{"_index":9,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-boolean-documentation.html":{}}}],["finite",{"_index":158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["finite.ts",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["first",{"_index":143,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["firsttruthy",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-boolean-documentation.html":{}}}],["float.ts",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["form",{"_index":181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["form.valuechange",{"_index":406,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["form.valuechange.pipe",{"_index":186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["format",{"_index":191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["from(['12.34']).pipe(parsefloat()).subscribe",{"_index":335,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["from(['12.34']).pipe(parseint()).subscribe",{"_index":338,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["from(['1234']).pipe(padstring('end",{"_index":382,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["from(['1234']).pipe(padstring('start",{"_index":386,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["from(['hello",{"_index":388,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["from(['hello?']).pipe(charat(2)).subscribe",{"_index":374,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["from(['hello?']).pipe(charcodeat(2)).subscribe",{"_index":377,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["from(['hello?']).pipe(endswith('?')).subscribe",{"_index":380,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["from(['test1",{"_index":306,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{}}}],["from([1",{"_index":325,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["from([1000",{"_index":340,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["from([1000000]).pipe(tolocalestring('en",{"_index":347,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["from([123.456",{"_index":354,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["from([[math.pow(2",{"_index":330,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["from([false",{"_index":152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["from([infinity]).pipe(isfinite()).subscribe",{"_index":323,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["from([true",{"_index":133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fromarray",{"_index":311,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["fromarray(['1",{"_index":312,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["fromendswith",{"_index":48,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fromendswith(character",{"_index":156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["functions",{"_index":76,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gb",{"_index":348,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["getting",{"_index":230,"title":{"index.html":{}},"body":{}}],["gt",{"_index":140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handle",{"_index":255,"title":{},"body":{"index.html":{}}}],["handling",{"_index":239,"title":{},"body":{"index.html":{}}}],["handy",{"_index":271,"title":{},"body":{"index.html":{}}}],["having",{"_index":254,"title":{},"body":{"index.html":{}}}],["hello",{"_index":390,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["http",{"_index":287,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["http.get(`/search?query=${query",{"_index":413,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["https://developer.mozilla.org/en",{"_index":198,"title":{},"body":{"miscellaneous/functions.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":303,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["include",{"_index":259,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["includes",{"_index":249,"title":{},"body":{"index.html":{}}}],["index",{"_index":77,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["initial",{"_index":176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["input",{"_index":218,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["install",{"_index":257,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["instructions",{"_index":258,"title":{},"body":{"index.html":{}}}],["int.ts",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["integer",{"_index":160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["integer.ts",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfinite",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["isinteger",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["isnan",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["issafeinteger",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["item",{"_index":144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["items",{"_index":129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["left",{"_index":226,"title":{},"body":{"miscellaneous/functions.html":{}}}],["length",{"_index":124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["level",{"_index":237,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":234,"title":{},"body":{"index.html":{}}}],["libraru",{"_index":400,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["library",{"_index":267,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["libs/.../char",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../debounce",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../ends",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../filter",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../first",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../from",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../is",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../pad",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../parse",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../position.ts",{"_index":280,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../start",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../to",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../trim",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/rxjs/boolean/src/lib/filter",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/rxjs/boolean/src/lib/first",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/rxjs/number/src/lib/is",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/rxjs/number/src/lib/parse",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/rxjs/number/src/lib/to",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/rxjs/string/src/lib/char",{"_index":38,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/rxjs/string/src/lib/ends",{"_index":43,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/rxjs/string/src/lib/from",{"_index":46,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/rxjs/string/src/lib/pad",{"_index":49,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/rxjs/string/src/lib/to",{"_index":51,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/rxjs/string/src/lib/trim",{"_index":57,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/rxjs/string/src/types/position.ts",{"_index":282,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/rxjs/utility/src/lib/debounce",{"_index":59,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["libs/rxjs/utility/src/lib/start",{"_index":62,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["locale",{"_index":32,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["locales",{"_index":192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["logic",{"_index":148,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{}}}],["low",{"_index":236,"title":{},"body":{"index.html":{}}}],["lower",{"_index":52,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapping",{"_index":256,"title":{},"body":{"index.html":{}}}],["matching",{"_index":69,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["math.pow(2",{"_index":332,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["maxlength",{"_index":162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["method",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["methods",{"_index":245,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["miscellaneous",{"_index":75,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":300,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["modules",{"_index":276,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monotypeoperatorfunction",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["more",{"_index":262,"title":{},"body":{"index.html":{}}}],["name",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nan.ts",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["nan]).pipe(isinteger()).subscribe",{"_index":328,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["new",{"_index":65,"title":{},"body":{"coverage.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["next",{"_index":316,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["npm",{"_index":263,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["number",{"_index":157,"title":{"additional-documentation/rxjs-number-documentation.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["number.isfinite",{"_index":322,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["number.isinteger",{"_index":324,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["number.isnan",{"_index":327,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["number.issafeinteger",{"_index":329,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["number.parsefloat",{"_index":334,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["number.parseint",{"_index":337,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["number.prototype.toexponential",{"_index":339,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["number.prototype.tolocalestring",{"_index":346,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["number.prototype.toprecision",{"_index":353,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["number.prototype.tostring",{"_index":360,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["objects",{"_index":248,"title":{},"body":{"index.html":{}}}],["observable",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["observables",{"_index":291,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{}}}],["one",{"_index":261,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["operations",{"_index":240,"title":{},"body":{"index.html":{}}}],["operator",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["operatorfunction",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["operators",{"_index":238,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["option",{"_index":225,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["output",{"_index":270,"title":{},"body":{"index.html":{}}}],["overview",{"_index":277,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":71,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["padding",{"_index":283,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["padposition",{"_index":171,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["pads",{"_index":164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["padstring",{"_index":50,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["padstring(padposition",{"_index":161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["page",{"_index":289,"title":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}},"body":{}}],["param",{"_index":228,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameter",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["parsefloat",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["parseint",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["parseint(radix",{"_index":173,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parses",{"_index":172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passed",{"_index":126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passing",{"_index":210,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe",{"_index":153,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["pipe(filtertruthy",{"_index":138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe(parsefloat",{"_index":321,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["pipe(parseint(16",{"_index":315,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["pipe(trim('end')).subscribe",{"_index":399,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["pipe(trim('start')).subscribe",{"_index":397,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["pipe(trim()).subscribe",{"_index":395,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["pipe(value",{"_index":416,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["please",{"_index":296,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["position",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["positioncount",{"_index":151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["positions",{"_index":285,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["preceding",{"_index":221,"title":{},"body":{"miscellaneous/functions.html":{}}}],["precision",{"_index":206,"title":{},"body":{"miscellaneous/functions.html":{}}}],["precision.ts",{"_index":35,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["primitive",{"_index":241,"title":{},"body":{"index.html":{}}}],["primitives",{"_index":232,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["project",{"_index":260,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["provide",{"_index":401,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["provided",{"_index":168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":235,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["public",{"_index":368,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["query",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["query.ts",{"_index":60,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["queryfn",{"_index":412,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["querymethod",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["radix",{"_index":174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["remote",{"_index":417,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["representation",{"_index":205,"title":{},"body":{"miscellaneous/functions.html":{}}}],["request",{"_index":288,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["require",{"_index":182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["required",{"_index":410,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["result",{"_index":68,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["results",{"_index":70,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["return",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["returned",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returning",{"_index":269,"title":{},"body":{"index.html":{}}}],["returns",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["right",{"_index":227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":302,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["rxjs",{"_index":73,"title":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["safe",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["search",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service",{"_index":286,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["set",{"_index":233,"title":{},"body":{"index.html":{}}}],["shout",{"_index":369,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["source",{"_index":131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["space",{"_index":224,"title":{},"body":{"miscellaneous/functions.html":{}}}],["specified",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["start",{"_index":166,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":231,"title":{"index.html":{}},"body":{}}],["startwithtap",{"_index":64,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["startwithtap(callback",{"_index":175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":293,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["string",{"_index":93,"title":{"additional-documentation/rxjs-string-documentation.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["string.prototype.charat",{"_index":373,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["string.prototype.charcodeat",{"_index":376,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["string.prototype.endswith",{"_index":379,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["string.prototype.padend",{"_index":381,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["string.prototype.padstart",{"_index":385,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["string.prototype.tolocalelowercase",{"_index":392,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["string.prototype.tolocaleuppercase",{"_index":387,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["string.prototype.trim",{"_index":394,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["string.prototype.trimend",{"_index":398,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["string.prototype.trimstart",{"_index":396,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["string.ts",{"_index":33,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stringinput.change.pipe",{"_index":414,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["style",{"_index":351,"title":{},"body":{"additional-documentation/rxjs-number-documentation.html":{}}}],["subscribe",{"_index":155,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["subscribe()debouncewithquery",{"_index":408,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["subscribe(value",{"_index":139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["subscribing",{"_index":180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["such",{"_index":201,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["supports",{"_index":209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":67,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":66,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["taking",{"_index":194,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["talkclass",{"_index":366,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["tap",{"_index":154,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["tap.ts",{"_index":63,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["test",{"_index":305,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{}}}],["test']).pipe(firsttruthy()).subscribe",{"_index":304,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{}}}],["test1",{"_index":308,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{}}}],["test2",{"_index":309,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{}}}],["test2']).pipe(filtertruthy()).subscribe",{"_index":307,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{}}}],["this.$currenttext.asobservable().pipe(tolowercase",{"_index":372,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["this.$currenttext.asobservable().pipe(touppercase",{"_index":370,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["this.ontouch",{"_index":187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this.touch",{"_index":407,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["time",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["tinynodes/rxjs",{"_index":264,"title":{},"body":{"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["toexponential",{"_index":31,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["toexponential(exponential",{"_index":188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tolocalestring",{"_index":34,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["tolocalestring(locales",{"_index":190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tolowercase",{"_index":54,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["tolowercase(locales",{"_index":193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toprecision",{"_index":36,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["toprecision(precision",{"_index":204,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tostring",{"_index":37,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{}}}],["tostring(radix",{"_index":207,"title":{},"body":{"miscellaneous/functions.html":{}}}],["touch",{"_index":183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["touppercase",{"_index":56,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["touppercase(locales",{"_index":214,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trailing",{"_index":222,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trim",{"_index":220,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["trimposition",{"_index":281,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["trims",{"_index":217,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trimstring",{"_index":58,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["trimstring(position",{"_index":216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["true",{"_index":142,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-string-documentation.html":{}}}],["truthy",{"_index":130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["truthy.ts",{"_index":7,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["two",{"_index":409,"title":{},"body":{"additional-documentation/rxjs-utility-documentation.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":278,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":242,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["upper",{"_index":55,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["us/docs/web/javascript/reference/global_objects/string/tolocalelowercase",{"_index":199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["us/docs/web/javascript/reference/global_objects/string/tolocaleuppercase",{"_index":215,"title":{},"body":{"miscellaneous/functions.html":{}}}],["use",{"_index":244,"title":{},"body":{"index.html":{}}}],["useful",{"_index":179,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["uses",{"_index":197,"title":{},"body":{"miscellaneous/functions.html":{}}}],["using",{"_index":292,"title":{},"body":{"additional-documentation/rxjs-boolean-documentation.html":{}}}],["utility",{"_index":265,"title":{"additional-documentation/rxjs-utility-documentation.html":{}},"body":{"index.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["value",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxjs-number-documentation.html":{},"additional-documentation/rxjs-utility-documentation.html":{}}}],["values",{"_index":213,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rxjs-boolean-documentation.html":{}}}],["whisper",{"_index":371,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["white",{"_index":223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["with.ts",{"_index":44,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["working",{"_index":272,"title":{},"body":{"index.html":{}}}],["world",{"_index":391,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["world']).pipe(tolowercase()).subscribe",{"_index":393,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["world']).pipe(touppercase()).subscribe",{"_index":389,"title":{},"body":{"additional-documentation/rxjs-string-documentation.html":{}}}],["yes",{"_index":128,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/rxjs/boolean/src/lib/filter-truthy.ts\n            \n            function\n            filterTruthy\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/boolean/src/lib/first-truthy.ts\n            \n            function\n            firstTruthy\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/number/src/lib/is-finite.ts\n            \n            function\n            isFinite\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/number/src/lib/is-integer.ts\n            \n            function\n            isInteger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/number/src/lib/is-nan.ts\n            \n            function\n            isNaN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/number/src/lib/is-safe-integer.ts\n            \n            function\n            isSafeInteger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/number/src/lib/parse-float.ts\n            \n            function\n            parseFloat\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/number/src/lib/parse-int.ts\n            \n            function\n            parseInt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/number/src/lib/to-exponential.ts\n            \n            function\n            toExponential\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/number/src/lib/to-locale-string.ts\n            \n            function\n            toLocaleString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/number/src/lib/to-precision.ts\n            \n            function\n            toPrecision\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/number/src/lib/to-string.ts\n            \n            function\n            toString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/string/src/lib/char-at.ts\n            \n            function\n            charAt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/string/src/lib/char-code-at.ts\n            \n            function\n            charCodeAt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/string/src/lib/ends-with.ts\n            \n            function\n            endsWith\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/string/src/lib/from-ends-with.ts\n            \n            function\n            fromEndsWith\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/string/src/lib/pad-string.ts\n            \n            function\n            padString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/string/src/lib/to-lower-case.ts\n            \n            function\n            toLowerCase\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/string/src/lib/to-upper-case.ts\n            \n            function\n            toUpperCase\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/string/src/lib/trim-string.ts\n            \n            function\n            trimString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/utility/src/lib/debounce-with-query.ts\n            \n            function\n            debounceWithQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/rxjs/utility/src/lib/start-with-tap.ts\n            \n            function\n            startWithTap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            rxjs : ^6.5.5\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            charAt   (libs/.../char-at.ts)\n                        \n                        \n                            charCodeAt   (libs/.../char-code-at.ts)\n                        \n                        \n                            debounceWithQuery   (libs/.../debounce-with-query.ts)\n                        \n                        \n                            endsWith   (libs/.../ends-with.ts)\n                        \n                        \n                            filterTruthy   (libs/.../filter-truthy.ts)\n                        \n                        \n                            firstTruthy   (libs/.../first-truthy.ts)\n                        \n                        \n                            fromEndsWith   (libs/.../from-ends-with.ts)\n                        \n                        \n                            isFinite   (libs/.../is-finite.ts)\n                        \n                        \n                            isInteger   (libs/.../is-integer.ts)\n                        \n                        \n                            isNaN   (libs/.../is-nan.ts)\n                        \n                        \n                            isSafeInteger   (libs/.../is-safe-integer.ts)\n                        \n                        \n                            padString   (libs/.../pad-string.ts)\n                        \n                        \n                            parseFloat   (libs/.../parse-float.ts)\n                        \n                        \n                            parseInt   (libs/.../parse-int.ts)\n                        \n                        \n                            startWithTap   (libs/.../start-with-tap.ts)\n                        \n                        \n                            toExponential   (libs/.../to-exponential.ts)\n                        \n                        \n                            toLocaleString   (libs/.../to-locale-string.ts)\n                        \n                        \n                            toLowerCase   (libs/.../to-lower-case.ts)\n                        \n                        \n                            toPrecision   (libs/.../to-precision.ts)\n                        \n                        \n                            toString   (libs/.../to-string.ts)\n                        \n                        \n                            toUpperCase   (libs/.../to-upper-case.ts)\n                        \n                        \n                            trimString   (libs/.../trim-string.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/rxjs/string/src/lib/char-at.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            charAt\n                        \n                        \n                    \n                \n            \n            \n                \ncharAt(position)\n                \n            \n\n\n\n\n            \n                \n                    Takes an Observable string value and returns\nthe character at the specified 0-index position\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The position for the character to return\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/string/src/lib/char-code-at.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            charCodeAt\n                        \n                        \n                    \n                \n            \n            \n                \ncharCodeAt(position)\n                \n            \n\n\n\n\n            \n                \n                    Takes an Observable string value and returns\nthe character code for the character at the specified 0-index position\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The position for the character to return\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/utility/src/lib/debounce-with-query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            debounceWithQuery\n                        \n                        \n                    \n                \n            \n            \n                \ndebounceWithQuery(time, queryMethod)\n                \n            \n\n\n\n\n            \n                \n                    Operator that takes an Observable string value\nand debounces it by the time parameter, and checks that the value changes.\nWhen the debounce completes the queryMethod is called and the result returned.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The time to debounce the query by\n\n                                    \n                                \n                                \n                                    queryMethod\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The method that returns the search\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An {\n\n                    \n                \n            \n        \n    \n    libs/rxjs/string/src/lib/ends-with.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            endsWith\n                        \n                        \n                    \n                \n            \n            \n                \nendsWith(character, length?)\n                \n            \n\n\n\n\n            \n                \n                    Takes an Observable string and returns a boolean\nvalue if the string ends with a passed character\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    character\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The character to check\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The length of the string to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/boolean/src/lib/filter-truthy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            filterTruthy\n                        \n                        \n                    \n                \n            \n            \n                \nfilterTruthy()\n                \n            \n\n\n\n\n            \n                \n                    Returns only items that are truthy from an observable source\n\n\n                    \n                        Example :\n                        \n                            from([true, false, &#39;&#39;, &#39;test&#39;, undefined])\n  .pipe(filterTruthy())\n  .subscribe(value =&gt; console.log(value)) // [true, &#39;test&#39;]\n                        \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/boolean/src/lib/first-truthy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            firstTruthy\n                        \n                        \n                    \n                \n            \n            \n                \nfirstTruthy()\n                \n            \n\n\n\n\n            \n                \n                    Returns the first truthy item from an Observable source, in this case it does\nnot error when there is no item, allowing logic to continue based on this\nresult\n\n\n                    \n                        Example :\n                        \n                            let positionCount = 0;\nfrom([false, false, false, false, true])\n.pipe(\ntap(() =&gt; positionCount++)\nfirstTruthy()\n).subscribe()\n                        \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/string/src/lib/from-ends-with.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fromEndsWith\n                        \n                        \n                    \n                \n            \n            \n                \nfromEndsWith(character, length?)\n                \n            \n\n\n\n\n            \n                \n                    Takes an Observable string and returns a string\nif it ends with a specified character\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    character\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The character to check\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The length of the string to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/number/src/lib/is-finite.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isFinite\n                        \n                        \n                    \n                \n            \n            \n                \nisFinite()\n                \n            \n\n\n\n\n            \n                \n                    Returns if a number is finite\n\n\n                    \n                        Returns :     OperatorFunction\n\n                    \n                \n            \n        \n    \n    libs/rxjs/number/src/lib/is-integer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isInteger\n                        \n                        \n                    \n                \n            \n            \n                \nisInteger()\n                \n            \n\n\n\n\n            \n                \n                    Returns a boolean value of the Observable number being an integer\n\n\n                    \n                        Returns :     OperatorFunction\n\n                    \n                \n            \n        \n    \n    libs/rxjs/number/src/lib/is-nan.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isNaN\n                        \n                        \n                    \n                \n            \n            \n                \nisNaN()\n                \n            \n\n\n\n\n            \n                \n                    Returns an Observable boolean value if a value is not a number\n\n\n                    \n                        Returns :     OperatorFunction\n\n                    \n                \n            \n        \n    \n    libs/rxjs/number/src/lib/is-safe-integer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isSafeInteger\n                        \n                        \n                    \n                \n            \n            \n                \nisSafeInteger()\n                \n            \n\n\n\n\n            \n                \n                    Returns an Observable value of a number being a safe integer value\n\n\n                    \n                        Returns :     OperatorFunction\n\n                    \n                \n            \n        \n    \n    libs/rxjs/string/src/lib/pad-string.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            padString\n                        \n                        \n                    \n                \n            \n            \n                \npadString(padPosition, maxLength, fillString?)\n                \n            \n\n\n\n\n            \n                \n                    Pads a string - can pad from the start or end and to a specified length.\nAn optional string can be provided as the fill string, the default is 0\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    padPosition\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxLength\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fillString\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/number/src/lib/parse-float.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            parseFloat\n                        \n                        \n                    \n                \n            \n            \n                \nparseFloat()\n                \n            \n\n\n\n\n            \n                \n                    Parses a string to number\n\n\n                    \n                        Returns :     OperatorFunction\n\n                    \n                \n            \n        \n    \n    libs/rxjs/number/src/lib/parse-int.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            parseInt\n                        \n                        \n                    \n                \n            \n            \n                \nparseInt(radix: number)\n                \n            \n\n\n\n\n            \n                \n                    Parses a string to an integer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    radix\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/rxjs/utility/src/lib/start-with-tap.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            startWithTap\n                        \n                        \n                    \n                \n            \n            \n                \nstartWithTap(callback)\n                \n            \n\n\n\n\n            \n                \n                    Start with a initial tap method before continuing, useful for subscribing\nto form changes that require a touch method to be called\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    callback\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The callback to be executed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            form.valueChange.pipe(\n  startWithTap(() =&gt; this.onTouch())\n).subscribe()\n                        \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/number/src/lib/to-exponential.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            toExponential\n                        \n                        \n                    \n                \n            \n            \n                \ntoExponential(exponential)\n                \n            \n\n\n\n\n            \n                \n                    Returns the exponential number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exponential\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/number/src/lib/to-locale-string.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            toLocaleString\n                        \n                        \n                    \n                \n            \n            \n                \ntoLocaleString(locales, format?)\n                \n            \n\n\n\n\n            \n                \n                    Returns an Observable number as a locale string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locales\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    format\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/rxjs/string/src/lib/to-lower-case.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            toLowerCase\n                        \n                        \n                    \n                \n            \n            \n                \ntoLowerCase(locales?)\n                \n            \n\n\n\n\n            \n                \n                    Operator for taking a string and converting it to all lower case characters.\nThe method uses https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleLowerCase|\nto do the conversion, as such this operator accepts an optional locale or locales to convert to\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    locales\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Locales for string conversion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/number/src/lib/to-precision.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            toPrecision\n                        \n                        \n                    \n                \n            \n            \n                \ntoPrecision(precision)\n                \n            \n\n\n\n\n            \n                \n                    Returns a number to a string representation based on the passed precision\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    precision\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/number/src/lib/to-string.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString(radix: number)\n                \n            \n\n\n\n\n            \n                \n                    Converts an Observable number value to a string, and supports passing a radix\nto convert to different base values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    radix\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/string/src/lib/to-upper-case.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            toUpperCase\n                        \n                        \n                    \n                \n            \n            \n                \ntoUpperCase(locales?)\n                \n            \n\n\n\n\n            \n                \n                    Operator for taking a string and converting it to all upper case characters.\nThe method uses https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleUpperCase|\nto do the conversion, as such this operator accepts an optional locale or locales to convert to\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    locales\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Locales for string conversion\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxjs/string/src/lib/trim-string.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            trimString\n                        \n                        \n                    \n                \n            \n            \n                \ntrimString(position)\n                \n            \n\n\n\n\n            \n                \n                    Trims a string from an input Observable, the default behaviour is to trim a string\nof all preceding and trailing white space.\nThe operator takes an optional option of left or 'right` to only trim before or after the string\n\n@param position The position to apply a trim at\n\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRxJS Primitives\nThis set of libraries provides some low-level RxJS operators for handling different operations with\nObservable values of primitive types (string, number, boolean, etc).\nThese operators use methods from ECMAScript built-in objects such as String and Number and it also includes some\nconvenience Boolean methods.\nThese are operators allow developers to avoid having to handle their own mapping or logic\nInstall Instructions\nTo include in your project install one or more of the libraries\n\nnpm i @tinynodes/rxjs-string @tinynodes/rxjs-number @tinynodes/rxjs-boolean @tinynodes/rxjs-utility\n\nLibraries\nrxjs-string\nAPI Documentation\nThis library provides operators around the ECMAScript String methods, taking an input Observable\nand returning a string or boolean output.\nrxjs-number\nAPI Documentation\nThis library provides operators around the ECMAScript Number methods, taking an input Observable\nand returning a number or boolean output\nrxjs-boolean\nAPI Documentation\nThis library provides handy methods where you are working with booleans, it takes any Observable value\nand returns results based on a boolean result\nrxjs-utility\nAPI Documentation\nA library that provides some additional useful operators such as startWithTap or debouceWithQuery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PadPosition   (libs/.../position.ts)\n                        \n                        \n                            QueryMethod   (libs/.../debounce-with-query.ts)\n                        \n                        \n                            TrimPosition   (libs/.../position.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/rxjs/string/src/types/position.ts\n    \n    \n        \n            \n                \n                    \n                    PadPosition\n                \n            \n            \n                \n                    The position to do the string padding at\n\n                \n            \n            \n                \n                        \"start\" | \"end\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TrimPosition\n                \n            \n            \n                \n                    The available positions to trim a string at\n\n                \n            \n            \n                \n                            PadPosition | \"all\"\n\n                \n            \n        \n    \n    libs/rxjs/utility/src/lib/debounce-with-query.ts\n    \n    \n        \n            \n                \n                    \n                    QueryMethod\n                \n            \n            \n                \n                    A method that takes a string value and returns and observable value from a service\nor HTTP request\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rxjs-boolean-documentation.html":{"url":"additional-documentation/rxjs-boolean-documentation.html","title":"additional-page - RxJS-boolean Documentation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nRxJS Primitives - Boolean Operators\nThis library is for RxJS Primitives and\nprovides some convenience operators for RxJS around\nfiltering values from Observables using boolean logic\nStatus\nThis library is currently in development. Please be aware APIs may change and there are missing features.\nHow to install\nIn your project run npm install @tinynodes/rxjs-boolean\nTo include in your project you can import the operators to include in any RxJS pipe\n\n\n\nOperator\nExample\n\n\n\n\nfirstTruthy\nfrom(['', '', 'test']).pipe(firstTruthy()).subscribe(// 'test')\n\n\nfilterTruthy\nfrom(['test1', '', 'test2']).pipe(filterTruthy()).subscribe(// 'test1', 'test2')\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rxjs-number-documentation.html":{"url":"additional-documentation/rxjs-number-documentation.html","title":"additional-page - RxJS-number Documentation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nRxJS Primitives - Number Operators\nThis library contains the RxJS Primitives for\nECMAScript Number\nmethods.\nStatus\nThis library is currently in development. Please be aware APIs may change and there are missing features.\nHow to install\nIn your project run npm install @tinynodes/rxjs-number\nTo include in your project you can import the operators to include in any RxJS pipe\nimport { parseFloat, parseInt } from '@tinynodes/rxjs-number';\nimport { fromArray } from 'rxjs';\n\nfromArray(['1', '12', '136'])\n  .pipe(parseInt(16))\n  .subscribe({\n    next: value => console.log(value), // 1, A, 5E\n  });\n\nfromArray(['1', '1.2', '45.34'])\n  .pipe(parseFloat())\n  .subscribe({\n    next: value => console.log(value), // 1, 1.2, 45.34\n  });Available Methods\n\n\n\nMethod\nOperator\nExample\n\n\n\n\nNumber.isFinite\nisFinite\nfrom([Infinity]).pipe(isFinite()).subscribe(// false)\n\n\nNumber.isInteger\nisInteger\nfrom([1, 3.14]).pipe(isInteger()).subscribe(// true, false)\n\n\nNumber.isNaN\nisNaN\nfrom([1, NaN]).pipe(isInteger()).subscribe(// false, true)\n\n\nNumber.isSafeInteger\nisSafeInteger\nfrom([[Math.pow(2, 53), Math.pow(2, 53) - 1]]).pipe(isInteger()).subscribe(// false, true)\n\n\nNumber.parseFloat\nparseFloat\nfrom(['12.34']).pipe(parseFloat()).subscribe(// 12.34)\n\n\nNumber.parseInt\nparseInt\nfrom(['12.34']).pipe(parseInt()).subscribe(// 12)\n\n\nNumber.prototype.toExponential\ntoExponential\nfrom([1000, 2000, 3000]).pipe(toExponential(2)).subscribe(// ['1.00e+3', '2.00e+3', '3.00e+3'])\n\n\nNumber.prototype.toLocaleString\ntoLocaleString\nfrom([1000000]).pipe(toLocaleString('en-GB', { currency: 'EUR', style: 'currency' }).subscribe(// '€1,000,000.00')\n\n\nNumber.prototype.toPrecision\ntoPrecision\nfrom([123.456, 0.004, 1.23e5]).pipe(toPrecision(4)).subscribe(// ['123.5', '0.004000', '1.230e+5'])\n\n\nNumber.prototype.toString\ntoString\nfrom([1, 255]).pipe(toString(16)).subscribe(// ['1', 'ff'])\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rxjs-string-documentation.html":{"url":"additional-documentation/rxjs-string-documentation.html","title":"additional-page - RxJS-string Documentation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nRxJS Primitives - String Operators\nThis library contains the RxJS Primitives for\nECMAScript String\nmethods.\nStatus\nThis library is currently in development. Please be aware APIs may change and there are missing features.\nHow to install\nIn your project run npm install @tinynodes/rxjs-string\nTo include in your project you can import the operators to include in any RxJS pipe\nimport { toUpperCase, toLowerCase } from '@tinynodes/rxjs-string';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport class TalkClass {\n  $currentText = new BehaviorSubject('');\n\n  public shout(): Observable {\n    return this.$currentText.asObservable().pipe(toUpperCase());\n  }\n  public whisper(): Observable {\n    return this.$currentText.asObservable().pipe(toLowerCase());\n  }\n}Available Methods\n\n\n\nMethod\nOperator\nExample\n\n\n\n\nString.prototype.charAt\ncharAt\nfrom(['Hello?']).pipe(charAt(2)).subscribe(// 'e')\n\n\nString.prototype.charCodeAt\ncharCodeAt\nfrom(['Hello?']).pipe(charCodeAt(2)).subscribe(// 101)\n\n\nString.prototype.endsWith\nendsWith\nfrom(['Hello?']).pipe(endsWith('?')).subscribe(// true)\n\n\nString.prototype.padEnd\npadString\nfrom(['1234']).pipe(padString('end', 5)).subscribe(// '1234 ')\n\n\nString.prototype.padStart\npadString\nfrom(['1234']).pipe(padString('start', 5)).subscribe(// ' 1234')\n\n\nString.prototype.toLocaleUpperCase\ntoUpperCase\nfrom(['hello world']).pipe(toUpperCase()).subscribe(// 'HELLO WORLD')\n\n\nString.prototype.toLocaleLowerCase\ntoLowerCase\nfrom(['HELLO WORLD']).pipe(toLowerCase()).subscribe(// 'hello world')\n\n\nString.prototype.trim\ntrim\nfrom([' hello world ']).pipe(trim()).subscribe(// 'hello world')\n\n\nString.prototype.trimStart\ntrim\nfrom([' hello world ']).pipe(trim('start')).subscribe(// 'hello world ')\n\n\nString.prototype.trimEnd\ntrim\nfrom([' hello world ']).pipe(trim('end')).subscribe(// ' hello world')\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rxjs-utility-documentation.html":{"url":"additional-documentation/rxjs-utility-documentation.html","title":"additional-page - RxJS-utility Documentation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nRxJS Primitives - Utility Libraru\nThis library is for RxJS Primitives and\nprovides some convenience operators for RxJS that provide some useful features.\nStatus\nThis library is currently in development. Please be aware APIs may change and there are missing features.\nHow to install\nIn your project run npm install @tinynodes/rxjs-boolean\nOperators\nstartWithTap\nThe startWithTap operator allows a developer to do a one-time tap event on the first emission\nfrom an Observable value.\nExample\nform.valueChange\n  .pipe(\n    startWithTap(() => this.touch()\n)).subscribe()debounceWithQuery\nThe debouceWithQuery operator takes two required parameters the debounce time and a function\nthat takes a string and returns an Observable value.\nconst queryFn = (query: string) => {\n  return http.get(`/search?query=${query}`)\n}\nstringInput.change.pipe(\n  debounceWithQuery(1000, queryFn)\n).pipe(value => console.log(value)) // Results from a remote query\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
